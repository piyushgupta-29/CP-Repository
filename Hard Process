#include<bits/stdc++.h>
using namespace std;
 
#define boost ios_base::sync_with_stdio(false);cin.tie(NULL)
#define endl "\n"
#define ll long long int
#define vll vector<ll>
#define pb push_back
#define mll map<ll,ll>

int main()
{
    boost;
    ll t,n,i,x,y,m,p,q,sum,ans,cnt,mx,mn,j,k;
    // cin>>t;
    // while(t--)
    // {
        sum=0;cnt=0;ans=0;mx=INT_MIN;mn=1e18;
        cin>>n>>k;
        vll a(n),pre(n+4,0),suf(n+4,0);
        vll v;
        for(i=0;i<n;i++)
        {
            cin>>a[i];
            if(a[i]==0)
                v.pb(i);
        }
        if(k>=v.size())
        {
            cout<<n<<endl;
            for(i=0;i<n;i++)
                cout<<1<<' ';
            cout<<endl;
            return 0;
        }
        if(k==0)
        {
            mx=0;
            for(i=0;i<n;i++)
            {
                if(a[i]==1) 
                {
                    sum++;
                    mx=max(mx,sum);
                }
                else 
                    sum=0;
            }
            cout<<mx<<endl;
            for(i=0;i<n;i++)
                cout<<a[i]<<' ';
            cout<<endl;
            return 0;
        }
        sum=a[0];
        for(i=1;i<n;i++)
        {
            if(a[i]==0)
            {
                pre[i]=sum;
                sum=0;
            }
            else 
                sum++;
        }
        sum=a[n-1];
        for(i=n-2;i>=0;i--)
        {
            if(a[i]==0)
            {
                suf[i]=sum;
                sum=0;
            }
            else 
                sum++;
        }
        for(i=0;i+k-1<v.size();i++)
        {
            if(v[i+k-1]-v[i]+suf[v[i+k-1]]+pre[v[i]]+1>mx)
            {
                mx=v[i+k-1]-v[i]+suf[v[i+k-1]]+pre[v[i]]+1;
                p=v[i];
                q=v[i+k-1];
            }
        }
        cout<<mx<<endl;
        for(i=0;i<n;i++)
        {
            if(i>=p&&i<=q)  
                cout<<1<<' ';
            else 
                cout<<a[i]<<' ';
        }
        cout<<endl;
    // }
}
